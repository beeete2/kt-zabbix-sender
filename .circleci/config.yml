version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: DOCKER_UID=$(id -u) DOCKER_GID=$(id -g) docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 5
      - restore_cache:
          key: jar-{{ checksum "build.gradle" }}
      - run:
          name: test and build
          command: DOCKER_UID=$(id -u) DOCKER_GID=$(id -g) docker-compose run java sh gradlew build
      - save_cache:
          key: jar-{{ checksum "build.gradle" }}
          paths:
            - .gradle
      - run:
          name: Run Allure
          command: |-
            docker run -it --rm -v $(readlink -f build):/output -w /output \
              -u $(id -u):$(id -g) beeete2/docker-allure2 \
              allure generate /output/test-results/test/ -o /output/reports/allure2/ --clean
      - run:
          name: docker-compose down
          command: docker-compose down
      - restore_cache:
          name: Restore cache for Gemfile
          key: gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: install gems
          command: bundle install --path vendor/bundle
      - save_cache:
          name: Save chache for Gemfile
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Run danger
          command: bundle exec danger
      - store_artifacts:
          path: build/reports/allure2
          destination: allure-reports
